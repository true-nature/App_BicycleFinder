＝＝＝＝ 自転車ビーコン アプリケーション ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

本アプリケーションは App_TweLite の改造例です。
  ●App_TweLite v1.7に対して、メロディアプリケーションApp_Melody v1.3.3のMML機能をマージしました。
  ●1秒スリープの子機間欠モードで、受信動作を有効にしてあります。

■ 想定する利用シーンについて
  ●大量の自転車が置かれた駐輪場で、自分の自転車の置き場所がわからなくなったときに、
    自転車側からメロディを再生して、発見を手助けします。
  ●自転車に装着した子機は、節電のため間欠動作しつつ、親機からの指令を待ち受けます。
  ●親機は持ち歩いて使用します。自転車を探す時だけ電源を入れ、子機に指令を送ります。

■ 動作について
  ●連続モードでは、App_Melodyと同様の動きをします。
  ●PWM1で圧電スピーカーを鳴らす動作は、App_Melodyと同様です。
  ●子機間欠モード(1秒スリープ)でも受信動作を行うように改造してあります。
  ●子機間欠モードでADCの動作間隔を長くすることにより、電池が長く持つようにしています。
  ●App_TweLite v1.7ベースに移行したことにより、App_Melody v1.3.3ではFailしていた設定値保存が機能します。

  ●子機間欠モードで受信を行う場合は、WakeUpのタイミイングを逃さないよう、
    DIがLoになっている時にパケットを連続送信するオプション(0x00000100)を親機にセットしてください。
  ●自転車ビーコンとして使う場合はxアナログ入力を使用しませんので、ADコンバータを使用しないオプション
    (0x00000020)を子機にセットしてください。これにより、電力消費が改善されます。

■ 改造部について
  ●MMLに関する部分は、App_Melodyと同様に #ifdef MML ... #endif で囲っています。
  ●MML再生中のDO4に接続したLEDを点滅させる部分は、#ifdef USE_DO4_AS_STATUS_LED ... #endif で囲っています。
  ●1秒スリープで受信を有効化する部分は、#ifdef USE_RX_ON_SLP_1SEC ... #endif で囲っています。
  ●間欠モードでADCの間隔を長くする部分は、#ifdef INCREASE_ADC_INTERVAL_ms ... #endif で囲っています。

■ 改造部のライセンスについて
  ●USE_RX_ON_SLP_1SECおよびUSE_DO4_AS_STATUS_LEDによって有効化される改造部については、ToCoNet SDKの利用規定に準じるものとします。

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
