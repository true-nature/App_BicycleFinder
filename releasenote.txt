＝＝＝＝ 自転車ビーコン アプリケーション ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

本アプリケーションは App_TweLite の改造例です。
  ●App_TweLite v1.7に対して、メロディアプリケーションApp_Melody v1.3.3のMML機能をマージしました。
  ●子機間欠モードで、受信動作を有効にしてあります。

■ 想定する利用シーンについて
  ●大量の自転車が置かれた駐輪場で、自分の自転車の置き場所がわからなくなったときに、
    自転車側からメロディを再生して、発見を手助けします。
  ●自転車に装着した受信機は、節電のため間欠動作しつつ、送信機からの指令を待ち受けます。
  ●送信機は持ち歩いて使用します。自転車を探す時だけ電源を入れ、受信機に指令を送ります。

■ 動作について
  ●連続モードでは、App_Melodyとほぼ同様の動きをしますが、子機/親機にかかわらず通信を行います。
  ●PWM1で圧電スピーカーを鳴らす動作は、App_Melodyと同様です。
  ●子機間欠モードでも受信動作を行うように改造してあります。
  ●子機間欠モードでADCの動作間隔を長くすることにより、電池が長く持つようにしています。
  ●App_TweLite v1.7ベースに移行したことにより、App_Melody v1.3.3ではFailしていた設定値保存が機能します。

■使用方法
  ●受信機は、mode4の子機間欠1秒モードで使用します。通信の間隔を4秒にしたとき、750mAhの電池で半年持つ見込みです。
  ●送信機は、mode7の子機間欠10秒モードを間欠時間0秒に設定し、ボタンが押されたときだけ動作するようにします。
  ●受信機と同じ長さのmode4通信間隔を、送信機側にもセットしてください。通信間隔+100msの間、連続送信します。
  ●送信機/受信機ともに、オプションビットは0x00000130にセットしてください。

■ 改造部について
  ●MMLに関する部分は、App_Melodyと同様に #ifdef MML ... #endif で囲っています。
  ●MML再生中のDO4に接続したLEDを点滅させる部分は、#ifdef USE_DO4_AS_STATUS_LED ... #endif で囲っています。
  ●1秒スリープで受信を有効化する部分は、#ifdef USE_RX_ON_SLP_1SEC ... #endif で囲っています。
  ●間欠モードでADCの間隔を長くする部分は、#ifdef INCREASE_ADC_INTERVAL_ms ... #endif で囲っています。
  ●間欠モードの子機同士で通信するため、親機/子機によるフィルタリングを
    #ifndef USE_CHILD_TO_CHILD_COMM ... #endif で囲って無効化しています。

■ 改造部のライセンスについて
  ●USE_RX_ON_SLP_1SECおよびUSE_DO4_AS_STATUS_LEDによって有効化される改造部については、ToCoNet SDKの利用規定に準じるものとします。

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
